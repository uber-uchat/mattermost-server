package mocks

import (
	"github.com/mattermost/mattermost-server/model"
	"github.com/mattermost/mattermost-server/store"
	"github.com/stretchr/testify/mock"
)

// PostStore is an autogenerated mock type for the PostStore type
type OooRequestStore struct {
	mock.Mock
}

// Get provides a mock function with given fields: id
func (_m *OooRequestStore) Get(id string) store.StoreChannel {
	ret := _m.Called(id)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(string) store.StoreChannel); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}

// GetAllBefore provides a mock function with given fields: id
func (_m *OooRequestStore) GetAllBefore(time int64) store.StoreChannel {
	ret := _m.Called(time)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(int64) store.StoreChannel); ok {
		r0 = rf(time)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}

// GetAllExpiredBefore provides a mock function with given fields: id
func (_m *OooRequestStore) GetAllExpiredBefore(time int64) store.StoreChannel {
	ret := _m.Called(time)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(int64) store.StoreChannel); ok {
		r0 = rf(time)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}

// PermanentDelete provides a mock function with given fields: id
func (_m *OooRequestStore) PermanentDelete(userId string) store.StoreChannel {
	ret := _m.Called(userId)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(string) store.StoreChannel); ok {
		r0 = rf(userId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}

// PermanentDeleteBefore provides a mock function with given fields: id
func (_m *OooRequestStore) PermanentDeleteBefore(time int64) store.StoreChannel {
	ret := _m.Called(time)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(int64) store.StoreChannel); ok {
		r0 = rf(time)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}

// Save provides a mock function with given fields: post
func (_m *OooRequestStore) Save(user *model.OooUser) store.StoreChannel {
	ret := _m.Called(user)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(oooUser *model.OooUser) store.StoreChannel); ok {
		r0 = rf(user)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}

// Update provides a mock function with given fields: post
func (_m *OooRequestStore) Update(userId string, createAt, deleteAt int64, requestNotifyProps model.StringMap) store.StoreChannel {
	ret := _m.Called(userId, createAt, deleteAt, requestNotifyProps)

	var r0 store.StoreChannel
	if rf, ok := ret.Get(0).(func(string, int64, int64, model.StringMap) store.StoreChannel); ok {
		r0 = rf(userId, createAt, deleteAt, requestNotifyProps)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(store.StoreChannel)
		}
	}

	return r0
}
